# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Cypress UI tests

on:
  push:
  pull_request:

jobs:
  cypress-zigbee:
    name: Cypress UI tests with Zigbee data
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [16.x]
        os: [ubuntu-22.04]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3.0.0
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: sudo ./src-script/install-packages-ubuntu
        if: startsWith(matrix.os, 'ubuntu')
      - run: sudo apt-get install --fix-missing xvfb
        if: startsWith(matrix.os, 'ubuntu')
      - run: npm ci
      - run: npm run version-stamp
      - run: npm rebuild canvas --update-binary
      - run: npm rebuild libxmljs --update-binary
      - run: npm run build-spa
      - run: xvfb-run -a npm run test:e2e-ci
        if: startsWith(matrix.os, 'ubuntu')

  cypress-matter:
    name: Cypress UI tests with Matter data
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [16.x]
        os: [ubuntu-22.04]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3.0.0
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: sudo ./src-script/install-packages-ubuntu
        if: startsWith(matrix.os, 'ubuntu')
      - run: sudo apt-get install --fix-missing xvfb
        if: startsWith(matrix.os, 'ubuntu')
      - run: npm ci
      - run: npm run version-stamp
      - run: npm rebuild canvas --update-binary
      - run: npm rebuild libxmljs --update-binary
      - run: npm run build-spa
      - run: xvfb-run -a npm run test:e2e-matter-ci
        if: startsWith(matrix.os, 'ubuntu')
